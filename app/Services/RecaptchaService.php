<?php

namespace App\Services;

use GuzzleHttp\Client;

/**
 * Class RecaptchaService
 *
 * This service handles the verification of Google reCAPTCHA tokens.
 */
class RecaptchaService
{
    /**
     * @var Client The HTTP client used to send requests to the reCAPTCHA API.
     */
    protected $client;

    /**
     * RecaptchaService constructor.
     *
     * Initializes the service with an instance of the Guzzle HTTP client.
     *
     * @param Client $client The HTTP client used for making requests.
     */
    public function __construct(Client $client)
    {
        $this->client = $client;
    }

    /**
     * Verify the reCAPTCHA token.
     *
     * Sends a POST request to Google's reCAPTCHA API to verify if the token is valid.
     *
     * @param string $token The reCAPTCHA token generated by the front-end.
     *
     * @return bool True if the verification was successful, otherwise false.
     */
    public function verify($token)
    {
        $response = $this->client->post('https://www.google.com/recaptcha/api/siteverify', [
            'form_params' => [
                'secret' => env('6LcVGSQqAAAAALchGprYckmG2uUibg3bnWWAnj_n'),
                'response' => $token,
            ],
        ]);

        $body = json_decode((string)$response->getBody());

        return $body->success;
    }
}
